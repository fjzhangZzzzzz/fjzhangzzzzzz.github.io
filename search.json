[{"title":"为什么不建议静态链接 glibc","url":"/2022/04/24/why-is-it-not-advisable-to-statically-link-glibc/","content":"问题背景\n工作环境中，由于要兼容低版本 Linux 发行版本，C&#x2F;C++ 应用程序的编译环境还是古老的 CentOS-5，其 glibc 版本是 2.5，应用程序动态链接 glibc-2.5 版本生成的可执行文件就支持在所有 glibc-2.5+ 的 Linux 系统\n但在古早 Linux 发行版上做开发还是比较蛋疼的事情，官方早已不维护更新，内核版本低，甚至不在很多软件的支持范围内\n如果静态链接 glibc 就不需要关心系统中 glibc 的版本了，是否能解决问题呢？但印象里有看到过不建议静态链接 glibc 的说法，但没有深究过根本原因，今天因为某些原因再次想到这个问题，索性就简单检索了一下问题并记录以备忘\n\n遍历已有\nWhy is statically linking glibc discouraged? - stackoverflow\n\n问题原因从已有参考来看，不建议静态链接 glibc 主要有两个原因：\n\nglibc 中某些模块是运行时加载（如 nss、iconv），且这些模块中同样引用了 c 库中的符号，这些模块本身可没有静态链接 glibc，这意味着\n当使用这些模块时，还是会产生对 glibc 的依赖，乃至于对动态链接器库或者其它库的依赖，这显然跟静态链接 glibc 的初衷相悖（合着到头来白静态链接了）\n比上一个影响更严重的是，进程虚拟空间中加载了多份 c 库的副本，某些资源的访问会出现冲突（比如 使用哪一份 stdout 缓冲区的使用）\n\n\n静态链接 libc 意味着，在可执行文件中固化了所有 c 库的实现，但要明确的东西是：\n应用程序和 libc 之间的接口是有标准规范的，比如 POSIX、C&#x2F;C++ 标准等\nlibc 和操作系统之间的接口是非标准的，我们静态链接 libc 相当于默认有这么一层约束，而这个约束并没有谁能提供保障\n\n\n\n","tags":["glibc","c/c++"]},{"title":"开源项目集锦","url":"/2022/04/30/collection-of-open-source-projects/","content":"健康生活\n996.ICU\n\n学习CS\nTIM168&#x2F;technical_books，技术书籍大杂烩\n自学计算机科学，编程、计算机系统构造、算法与数据结构、数学知识、操作系统、计算机网络、数据库、编程语言与编译器、分布式系统\nCS 自学指南，包含工具、国外高质量 CS 课程、经典书籍推荐等\nbuild-your-own-x - What I cannot create, I do not understand\nlibpku - 贵校课程资料民间整理\nAwesome lists about all kinds of interesting topics\n一些数学&#x2F;计算机课程收集列表\n软件工程相关论文收集\n\n操作系统\nHow to Make a Computer Operating System\nWriting an OS in Rust - 用 Rust 写一个最小操作系统教程\n如何 从零开始 用 Rust 语言写一个基于 RISC-V 架构的 类 Unix 内核\n内核开发系列视频教程\nos-guide-cn - 从零开始制作一个操作系统\nUnix v6 操作系统评注\n每个程序员都应该了解的内存知识\n每个程序员都应该了解的内存知识-0\n每个程序员都应该了解的内存知识-1\n每个程序员都应该了解的内存知识-2\n每个程序员都应该了解的内存知识-3\n\n\n\nLinux\n像小说一样品读 Linux 0.11 核心代码\n系统管理员应该了解的 30 个 Linux 系统监视工具\nLinux eBPF 资料集锦\nLinux 启动过程分析\nLinux 系统动态追踪技术介绍\nThe Linux Perf Master\nLinux 常用命令行小技巧\nLinux 操作系统内核学习\nLinux 内核学习资料\n深入分析 Linux 内核源码\nLinux Kernel Crash Book\n如何快准狠找到 Linux 系统内存的问题\nLinux 网络栈原理、监控与调优\nA journey into the Linux scheduler\n编程语言是如何实现并发的之操作系统篇\nLinux 核心设计\n\n算法\nfucking-algorithm - 算法小抄\n一文搞懂分治算法\n\n编程语言通用Project Based Learning - 基于工程实践的主流编程语言学习\nC\nModern C\n\nC++\nC++ Developer Roadmap\n在拥挤和变化的世界中茁壮成长：C++ 2006–2020 - C++ 之父 Bjarne Stroustrup 的 HOPL4 论文的中文版\nC++ Template 进阶指南\nC++ 并发编程指南\nAwesome Modern C++ - 现代 C++ 的资源集合\nModern C++ Tutorial: C++11&#x2F;14&#x2F;17&#x2F;20 On the Fly\nTinyWebServer - 轻量级 C++ Web 服务器实践及说明讲解\nC&#x2F;C++ 技术面试基础知识总结\nC++ 那些事 - 从入门到进阶\n30 天自制 C++服务器\nC++ Concurrency in Action 2ed 笔记 - C++11&#x2F;14&#x2F;17&#x2F;20 多线程，掌握操作系统原理，解锁并发编程技术\nC++ 算法编程指南\nC++ 性能优化背后的方法论：TMAM\nEffective Modern C++\nEffective Modern C++ 解读笔记\nModern Cpp Tricks，一些 C++ 相关的开发技巧\nEffective Debugging\nHow to create portable Linux binaries (even if you need a recent compiler)，如何创建可移植的 Linux 二进制文件\n\nShell\nEffective Shell\n命令行的艺术\nLinux 命令行与 Shell 脚本教程，精炼实用，仅高频用法\nBash 编程易犯的错误\n\nPython\nPython-programming-exercises - 100+ Python challenge programming exercises.\nPython - 100 天从新手到大师\nPython 源码剖析\nPython Cookbook in Chinese\n\nGo\nGo 语言精进之路\nGo 语言设计哲学\ndariubs&#x2F;GoBooks，Golang 书籍列表\n\nRust\nRust 语言圣经（中文） - {在线阅读}\nrust-by-practice - Rust 实战习题集\nRust API 编写指南\n从零开发到上线 - Rust 后端 API 开发\n嵌入式 Rust 之书\nRust 标准库特性指南\nRust for C++ Programmers\nByron&#x2F;gitoxide，纯 Rust 实现的 git\ntheseus-os&#x2F;Theseus，一个用 Rust 从头开始编写的新的试验性的操作系统\nTheAlgorithms&#x2F;Rust，Rust 实现的各种算法\nPractice Toy OS - RISC-V - Rust，从零开始用 Rust 语言写一个基于 RISC-V 架构的类 Unix 内核\nRust 源码分析\n\nJavascript\n30 Days Of JavaScript\n33 个 JS 概念学习指南\n\n数据库\ndb-tutorial - 数据库教程，包含 MySQL、NoSQL、MongoDB、Elasticsearch、Redis 等\n从零开始写数据库：500 行代码实现 LSM 数据库\nLet’s Build a Simple Database 使用 C 构建类 sqlite 数据库\nUSE THE INDEX，面向开发者的数据库性能指导\n\n存储\n存储（分布式、存储引擎等）领域相关的论文阅读笔记\n\n分布式\nDDIA，一本分布式系统、数据库、大数据处理的经典必读书籍\n\n网络安全\n面对网络安全从业者的知识库\nipv6\n不为人知的网络编程系列\nHack The Box，一个动态增长的黑客社区，通过游戏化的实践培训体验，将你的网络安全技能提升到一个新的水平。在有效的实践培训中边做边学\nHow to design a secure web API access for your website?\nCyber Security Detection Frameworks，网络安全检测框架\nvulhub&#x2F;vulhub，一个面向大众的开源漏洞靶场，无需 docker 知识，简单执行一条命令即可编译、运行一个完整的漏洞靶场镜像\n\n游戏\nMulti-Threaded Game Framework in C | Making a Game in C\n\n系统设计\n学习如何设计大型系统 | The System Design Primer\n\n编译\n一篇介绍编译器优化的文章\n\n其它\n爬取你要的数据：爬虫技术\ntcpdump 使用总结\n函数式编程指北\nSchool of SRE\nlinkedin 出品的 SRE（Sites Reliability Engineer） 入门教程\n101 包括 linux 基础、Git、linux 网络、python、数据库（关系数据库、nosql 和大数据的基础介绍）、系统设计、监控度量、安全相关的内容。\n102 包括 linux 中高级（包括容器技术 docker、k8s）、网络、系统设计、排查故障和性能改进、持续集成等内容\n\n\n树莓派编程实用教程\nGoogle 为数据工程师、机器学习工程师、云工程师、云架构师、数据分析师等提供的免费学习路线\nGDB 快速引用手册\n推荐系统入门教程 - 需要具有机器学习基础\nGit 权威指南\n中文技术文档写作风格指南\n桌维网管实典\nHow to Write a Git Commit Message\n编程之道 中英双语版\n搜索的原理 - 爬虫、索引、排序、检索的过程\nSide Project 指南 - 业余项目\n做系统架构的一些原则\n深入剖析 Kafka\nWhy’s THE Design - 为什么这么设计系列\nThe Mediocre Programmer - 平庸的程序员，一本如何成为更好的程序员的书\nAn Engineer’s Best Tips for Writing Documentation Devs Love，如何编写开发者喜欢的文档\nSSH 教程，介绍 SSH（主要是它的实现 OpenSSH）的概念和基本用法，也可以当作手册查询\n\n工具编辑器\nLearn-Vim(the Smart Way) 中文翻译，从概念到进阶技巧\nVimSkill，通过 vim 处理文本\nLapce - Rust 编写的开源编辑器，利用原生 GUI 和 GPU 渲染，支持 Window&#x2F;Linux&#x2F;macOS\nWerWolv&#x2F;ImHex，一个 16 进制编辑器，面向逆向工程师、程序员和在凌晨 3 点工作时重视视网膜的人的十六进制编辑器\n\n分析调试\nBytehound - Linux 内存分析工具\n可用于分析内存泄漏，查看内存消耗确切位置，识别临时分配和内存碎片分析。收集跟踪每个分配和释放，以及调用堆栈\n支持导出多种格式：JSON、Heaptrack，自带 Web GUI 可用于分析\n\n\nrr - 一个轻量级记录、回放和调试应用程序执行的工具\norbit - C&#x2F;C++ 性能分析工具，可视化复杂应用程序的执行流程\nhorsicq&#x2F;XPEViewer，跨平台的 PE 文件查看&#x2F;编辑器\nrapiz1&#x2F;catp，纯 Rust 实现的小工具，显示某个后台程序的输出，原理是用 ptrace 拦截系统调用里的 syscall write\n使用 GDB 和 DDD 进行愉快的调试\n\n网络\nwebsocketd - 包装现有命令行程序并通过 websocket 访问的命令行工具\n被包装的应用程序只需要处理标准输入输出，无需网络库，不限语言，即可由该命令行工具构建具有 websocket 功能的应用程序\n\n\nmermaid - 基于 Javascript 的文本化图表生成工具\n\n其他\nqemu-user-static - 开启 Linux 多架构执行能力（基于 QEMU 和 binfmt_misc）的容器\nPlantUML - 从文本描述生成 UML 图，在线版本\ntelegram-download-daemon - Telegram 大文件下载，作为第三方 Telegram 客户端实现，可作为后台进程进行下载\nfrp - 内网穿透，支持 TCP&#x2F;UDP&#x2F;HTTP&#x2F;HTTPS，支持 P2P\nsphinx - 文档生成工具，支持 Python&#x2F;C++，支持多种输出格式 HTML&#x2F;text&#x2F;LaTeX&#x2F;PDF\nremark - markdown 驱动的浏览器幻灯片工具\nreveal.js - 用于创建演示文稿的 HTML 演示框架\njsonvisio - json 可视化\njpegoptim - JPEG 文件压缩工具\ncode2img\nlinux 文件同步工具\nByteDance IconPark，字节跳动图标资源库\ncharmbracelet&#x2F;gum，shell 脚本工具，包装了很多 shell 脚本里需要交互操作或格式化输出的工作\n\n资源\npublic-apis&#x2F;public-apis，免费公开 API 收集\n\n开源库C&#x2F;C++\nawesome-cpp - C++ 资源大全中文版\n\n网络\nlibuv\n跨平台的异步 IO 库，最初用于 Node.js，有多种第三方开发的语言绑定，包括 Lua&#x2F;Python&#x2F;Go&#x2F;C++&#x2F;C# 等等等\n支持异步 TCP&#x2F;UDP 套接字、异步 DNS 解析、异步文件和文件系统操作、文件系统事件、IPC（使用 Unix 域套接字和 Windows 命名管道）、子进程、线程池、信号处理、高精度时钟、线程和同步原语\n\n\npython-telegram-bot - Telegram Bot API 的纯 Python 封装\ncrow - 用于 Web 的微服务框架\nworkflow - C++ 并行计算和异步网络引擎\ncpr - libcurl 的 C++ 封装库，风格类似 Python Request 库\nZLMediaKit&#x2F;ZLMediaKit，一个基于 C++11 的高性能运营级流媒体服务框架\n\n存储\nleveldb - 快速键值存储库\n\nGUI\nimgui - 可移植的即时模式 GUI 库\nraygui - 简单易用的即时模式 GUI 库\njuce-framework&#x2F;JUCE，一个开源的跨平台 C++ 应用程序框架，用于创建高质量的桌面和移动应用程序\n\n机器学习\nflashlight - 机器学习库\n\n其他\nCLI11 - C++11 命令行解析工具\npugixml - XML 处理库\nlinenoise - 最小 readline 替代库\nfmt - 格式化库，C++ 20 std::format 的实现，提供一种 C stdio 和 C++ iostream 的快速安全方案\nvincentlaucsb&#x2F;csv-parser，csv 读、写、解析库\ngoogle&#x2F;flatbuffers，一个跨平台序列化库，旨在最大限度地提高内存效率。 允许直接访问序列化数据而无需先对其进行解析&#x2F;解包，同时仍具有出色的向前&#x2F;向后兼容性。\nlfreist&#x2F;hwinfo，使用 C++ 获取硬件信息的跨平台解决方案\n\nGo\nAwesome Go\n\nShell\nshUnit2 - bash 单元测试框架\nargc - 用于 sh&#x2F;bash 的命令行解析工具\n\nRust\ntui-rs - 用于构建终端用户界面和仪表盘的 Rust 库\n并发编程工具集\nphiresky&#x2F;sqlite-zstd，sqlite 压缩工具\ncloudwego&#x2F;volo，字跳开源的一个高性能和强可扩展性的 Rust RPC 框架，可帮助开发人员构建微服务\nyewstack&#x2F;yew，一个设计先进的 Rust 框架，目的是使用 WebAssembly 来创建多线程的前端 web 应用\n\n"}]